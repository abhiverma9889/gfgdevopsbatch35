In Kubernetes, a pod is the smallest deployable unit of computing. It represents a group of one or more containers (like Docker containers) that are guaranteed to be co-located on the same host and can share resources. Think of it as a logical grouping of containers that are always scheduled together and run in a shared context. 

Here's a more detailed breakdown:
Encapsulation:
A pod encapsulates one or more containers, along with shared storage (volumes) and network resources. 
Co-location and Co-scheduling:
Containers within a pod are always scheduled to run on the same node and share the same network namespace. 
Shared Resources:
Pods provide a shared network identity (IP address) and storage (volumes) for the containers within them. 
Smallest Deployable Unit:
Pods are the fundamental units that Kubernetes manages, schedules, and scales. 
Ephemeral Nature:
Pods are considered ephemeral, meaning they can be easily created and destroyed. If a pod or the node it's running on fails, Kubernetes can automatically create a new replica of the pod. 
Relationship to other Kubernetes objects:
Pods are often managed by higher-level controllers like Deployments, which handle scaling, updates, and self-healing. 